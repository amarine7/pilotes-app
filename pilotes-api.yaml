openapi: 3.0.0
info:
  title: Pilotes of the great Miquel Montoro
  description: API-based application for managing orders of the famous Pilotes of the great Miquel Montoro (Majorcan recipe consisting of a meatball stew).
  version: 0.0.1
#tags:
#  - name: pilotes
#    description: Miquel Montoro Pilotes functions
paths:
  /api/create-your-pilotes:
    post:
      tags:
        - create
      summary: create a pilotes
      operationId: createPilotes
      parameters:
        - name: Content-Type
          in: header
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        description: create a pilotes
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json: {}
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/search-pilotes:
    get:
      tags:
        - search
      summary: Find a pilotes
      operationId: findPilotes
      parameters:
        - name: Content-Type
          in: header
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: Authorization
          in: header
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: customerId
          in: query
          description: "id of a customer"
          required: false
          style: form
          explode: false
          schema:
            type: integer
            format: int64
        - name: orderId
          in: query
          description: "id of an order"
          required: false
          style: form
          explode: false
          schema:
            type: integer
            format: int64
        - name: firstName
          in: query
          description: "first name of the customer of an order"
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: lastName
          in: query
          description: "last name of the customer of an order"
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: address
          description: "address of the customer of an order"
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/update-pilotes/{id}:
    put:
      tags:
        - update
      summary: Update a pilotes order
      operationId: updatePilotes
      parameters:
        - name: Content-Type
          in: header
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: id
          in: path
          description: order id to update
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      requestBody:
        description: updated order
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json: {}
        "400":
          description: Invalid input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Data not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    Order:
      type: object
      required:
        - deliveryAddress
        - numberOfPilotes
      properties:
        id:
          type: integer
          format: int64
        deliveryAddress:
          type: string
        numberOfPilotes:
          type: integer
          format: int32
          # enum:
          # - 5
          # - 10
          # - 15
        orderTotal:
          type: number
          format: int64
        orderDate:
          type: string
          format: timestamp
        idUser:
          type: integer
          format: int64
    ErrorResponse:
      type: object
      properties:
        timestamp:
          type: string
          format: timestamp
        error:
          type: string
        status:
          type: integer
          format: int32
        fieldErrors:
          type: array
          items:
            type: string
